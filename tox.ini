[tox]
minversion = 2.4
envlist = py{35,27}-{postgresql,mysql}{,-file,-swift,-ceph,-s3},pep8
<<<<<<< HEAD
<<<<<<< HEAD

[testenv]
usedevelop = True
=======
=======
>>>>>>> f21ea84... Add automatic backport labels
skipsdist = True

[testenv]
skip_install = True
<<<<<<< HEAD
>>>>>>> 11a2520... api: avoid some indexer queries
=======
>>>>>>> f21ea84... Add automatic backport labels
sitepackages = False
passenv = LANG GNOCCHI_TEST_* AWS_*
setenv =
    GNOCCHI_TEST_STORAGE_DRIVER=file
    GNOCCHI_TEST_INDEXER_DRIVER=postgresql
    GNOCCHI_TEST_STORAGE_DRIVERS=file swift ceph s3 redis
    GNOCCHI_TEST_INDEXER_DRIVERS=postgresql mysql
    file: GNOCCHI_TEST_STORAGE_DRIVERS=file
    swift: GNOCCHI_TEST_STORAGE_DRIVERS=swift
    ceph: GNOCCHI_TEST_STORAGE_DRIVERS=ceph
    redis: GNOCCHI_TEST_STORAGE_DRIVERS=redis
    s3: GNOCCHI_TEST_STORAGE_DRIVERS=s3
    postgresql: GNOCCHI_TEST_INDEXER_DRIVERS=postgresql
    mysql: GNOCCHI_TEST_INDEXER_DRIVERS=mysql

    GNOCCHI_STORAGE_DEPS=file,swift,test-swift,s3,ceph,redis
    ceph: GNOCCHI_STORAGE_DEPS=ceph
    swift: GNOCCHI_STORAGE_DEPS=swift,test-swift
    file: GNOCCHI_STORAGE_DEPS=file
    redis: GNOCCHI_STORAGE_DEPS=redis
    s3: GNOCCHI_STORAGE_DEPS=s3

    GNOCCHI_INDEXER_DEPS=mysql,postgresql
    mysql: GNOCCHI_INDEXER_DEPS=mysql
    postgresql: GNOCCHI_INDEXER_DEPS=postgresql

    # FIXME(sileht): pbr doesn't support url in setup.cfg extras, so we do this crap
    GNOCCHI_TEST_TARBALLS=http://tarballs.openstack.org/swift/swift-master.tar.gz#egg=swift
    ceph: GNOCCHI_TEST_TARBALLS=
    swift: GNOCCHI_TEST_TARBALLS=http://tarballs.openstack.org/swift/swift-master.tar.gz#egg=swift
    s3: GNOCCHI_TEST_TARBALLS=
    redis: GNOCCHI_TEST_TARBALLS=
    file: GNOCCHI_TEST_TARBALLS=
# NOTE(jd) Install redis as a test dependency since it is used as a
# coordination driver in functional tests (--coordination-driver is passed to
# pifpaf)
<<<<<<< HEAD
<<<<<<< HEAD
deps = .[test,redis,prometheus,{env:GNOCCHI_STORAGE_DEPS:},{env:GNOCCHI_INDEXER_DEPS:}]
=======
deps =
   -e
   .[test,redis,prometheus,{env:GNOCCHI_STORAGE_DEPS:},{env:GNOCCHI_INDEXER_DEPS:}]
>>>>>>> 11a2520... api: avoid some indexer queries
=======
deps =
   -e
   .[test,redis,prometheus,{env:GNOCCHI_STORAGE_DEPS:},{env:GNOCCHI_INDEXER_DEPS:}]
>>>>>>> f21ea84... Add automatic backport labels
   {env:GNOCCHI_TEST_TARBALLS:}
   cliff!=2.9.0
commands =
    {toxinidir}/run-tests.sh {posargs}
    {toxinidir}/run-func-tests.sh {posargs}

<<<<<<< HEAD
<<<<<<< HEAD
[testenv:py35-postgresql-file-upgrade-from-3.1]
# We should always recreate since the script upgrade
# Gnocchi we can't reuse the virtualenv
recreate = True
skip_install = True
usedevelop = False
setenv = GNOCCHI_VARIANT=test,postgresql,file
deps = gnocchi[{env:GNOCCHI_VARIANT}]>=3.1,<3.2
=======
=======
>>>>>>> f21ea84... Add automatic backport labels
[testenv:py35-postgresql-file-upgrade-from-4.0]
# We should always recreate since the script upgrade
# Gnocchi we can't reuse the virtualenv
recreate = True
setenv = GNOCCHI_VARIANT=test,postgresql,file
deps = gnocchi[{env:GNOCCHI_VARIANT}]>=4.0,<4.1
<<<<<<< HEAD
>>>>>>> 11a2520... api: avoid some indexer queries
=======
>>>>>>> f21ea84... Add automatic backport labels
  pifpaf[gnocchi]>=0.13
  gnocchiclient>=2.8.0
commands = pifpaf --env-prefix INDEXER run postgresql {toxinidir}/run-upgrade-tests.sh {posargs}

<<<<<<< HEAD
<<<<<<< HEAD
[testenv:py27-mysql-ceph-upgrade-from-3.1]
# We should always recreate since the script upgrade
# Gnocchi we can't reuse the virtualenv
recreate = True
skip_install = True
usedevelop = False
setenv = GNOCCHI_VARIANT=test,mysql,ceph,ceph_recommended_lib
deps = gnocchi[{env:GNOCCHI_VARIANT}]>=3.1,<3.2
=======
=======
>>>>>>> f21ea84... Add automatic backport labels
[testenv:py27-mysql-ceph-upgrade-from-4.0]
# We should always recreate since the script upgrade
# Gnocchi we can't reuse the virtualenv
recreate = True
setenv = GNOCCHI_VARIANT=test,mysql,ceph,ceph_recommended_lib
deps = gnocchi[{env:GNOCCHI_VARIANT}]>=4.0,<4.1
<<<<<<< HEAD
>>>>>>> 11a2520... api: avoid some indexer queries
=======
>>>>>>> f21ea84... Add automatic backport labels
  gnocchiclient>=2.8.0
  pifpaf[ceph,gnocchi]>=0.13
commands = pifpaf --env-prefix INDEXER run mysql -- pifpaf --env-prefix STORAGE run ceph {toxinidir}/run-upgrade-tests.sh {posargs}

<<<<<<< HEAD
<<<<<<< HEAD
[testenv:py35-postgresql-file-upgrade-from-4.0]
# We should always recreate since the script upgrade
# Gnocchi we can't reuse the virtualenv
recreate = True
skip_install = True
usedevelop = False
setenv = GNOCCHI_VARIANT=test,postgresql,file
deps = gnocchi[{env:GNOCCHI_VARIANT}]>=4.0,<4.1
=======
=======
>>>>>>> f21ea84... Add automatic backport labels
[testenv:py35-postgresql-file-upgrade-from-4.1]
# We should always recreate since the script upgrade
# Gnocchi we can't reuse the virtualenv
recreate = True
setenv = GNOCCHI_VARIANT=test,postgresql,file
deps = gnocchi[{env:GNOCCHI_VARIANT}]>=4.1,<4.2
<<<<<<< HEAD
>>>>>>> 11a2520... api: avoid some indexer queries
=======
>>>>>>> f21ea84... Add automatic backport labels
  pifpaf[gnocchi]>=0.13
  gnocchiclient>=2.8.0
commands = pifpaf --env-prefix INDEXER run postgresql {toxinidir}/run-upgrade-tests.sh {posargs}

<<<<<<< HEAD
<<<<<<< HEAD
[testenv:py27-mysql-ceph-upgrade-from-4.0]
# We should always recreate since the script upgrade
# Gnocchi we can't reuse the virtualenv
recreate = True
skip_install = True
usedevelop = False
setenv = GNOCCHI_VARIANT=test,mysql,ceph,ceph_recommended_lib
deps = gnocchi[{env:GNOCCHI_VARIANT}]>=4.0,<4.1
=======
=======
>>>>>>> f21ea84... Add automatic backport labels
[testenv:py27-mysql-ceph-upgrade-from-4.1]
# We should always recreate since the script upgrade
# Gnocchi we can't reuse the virtualenv
recreate = True
setenv = GNOCCHI_VARIANT=test,mysql,ceph,ceph_recommended_lib
deps = gnocchi[{env:GNOCCHI_VARIANT}]>=4.1,<4.2
<<<<<<< HEAD
>>>>>>> 11a2520... api: avoid some indexer queries
=======
>>>>>>> f21ea84... Add automatic backport labels
  gnocchiclient>=2.8.0
  pifpaf[ceph,gnocchi]>=0.13
commands = pifpaf --env-prefix INDEXER run mysql -- pifpaf --env-prefix STORAGE run ceph {toxinidir}/run-upgrade-tests.sh {posargs}

<<<<<<< HEAD
<<<<<<< HEAD
[testenv:py35-postgresql-file-upgrade-from-4.1]
# We should always recreate since the script upgrade
# Gnocchi we can't reuse the virtualenv
recreate = True
skip_install = True
usedevelop = False
setenv = GNOCCHI_VARIANT=test,postgresql,file
deps = gnocchi[{env:GNOCCHI_VARIANT}]>=4.1,<4.2
=======
=======
>>>>>>> f21ea84... Add automatic backport labels
[testenv:py35-postgresql-file-upgrade-from-4.2]
# We should always recreate since the script upgrade
# Gnocchi we can't reuse the virtualenv
recreate = True
setenv = GNOCCHI_VARIANT=test,postgresql,file
deps = gnocchi[{env:GNOCCHI_VARIANT}]>=4.2,<4.3
<<<<<<< HEAD
>>>>>>> 11a2520... api: avoid some indexer queries
=======
>>>>>>> f21ea84... Add automatic backport labels
  pifpaf[gnocchi]>=0.13
  gnocchiclient>=2.8.0
commands = pifpaf --env-prefix INDEXER run postgresql {toxinidir}/run-upgrade-tests.sh {posargs}

<<<<<<< HEAD
<<<<<<< HEAD
[testenv:py27-mysql-ceph-upgrade-from-4.1]
# We should always recreate since the script upgrade
# Gnocchi we can't reuse the virtualenv
recreate = True
skip_install = True
usedevelop = False
setenv = GNOCCHI_VARIANT=test,mysql,ceph,ceph_recommended_lib
deps = gnocchi[{env:GNOCCHI_VARIANT}]>=4.1,<4.2
=======
=======
>>>>>>> f21ea84... Add automatic backport labels
[testenv:py27-mysql-ceph-upgrade-from-4.2]
# We should always recreate since the script upgrade
# Gnocchi we can't reuse the virtualenv
recreate = True
setenv = GNOCCHI_VARIANT=test,mysql,ceph,ceph_recommended_lib
deps = gnocchi[{env:GNOCCHI_VARIANT}]>=4.2,<4.3
<<<<<<< HEAD
>>>>>>> 11a2520... api: avoid some indexer queries
=======
>>>>>>> f21ea84... Add automatic backport labels
  gnocchiclient>=2.8.0
  pifpaf[ceph,gnocchi]>=0.13
commands = pifpaf --env-prefix INDEXER run mysql -- pifpaf --env-prefix STORAGE run ceph {toxinidir}/run-upgrade-tests.sh {posargs}

[testenv:pep8]
deps = hacking>=0.12,<0.13
<<<<<<< HEAD
<<<<<<< HEAD
       bashate
whitelist_externals = bash
commands = flake8
           bashate -v devstack/plugin.sh
=======
commands = flake8
>>>>>>> 11a2520... api: avoid some indexer queries
=======
commands = flake8
>>>>>>> f21ea84... Add automatic backport labels

[testenv:py27-cover]
commands = pifpaf -g GNOCCHI_INDEXER_URL run postgresql -- python setup.py testr --coverage --testr-args="{posargs}"

[testenv:venv]
# This is used by the doc job on the gate
deps = {[testenv:docs]deps}
commands = pifpaf -g GNOCCHI_INDEXER_URL run postgresql -- {posargs}

[flake8]
exclude = .tox,.eggs,doc,gnocchi/rest/prometheus/remote_pb2.py
show-source = true
enable-extensions = H904

[testenv:docs]
basepython = python3
## This does not work, see: https://github.com/tox-dev/tox/issues/509
# deps = {[testenv]deps}
#        .[postgresql,doc]
# setenv = GNOCCHI_STORAGE_DEPS=file
<<<<<<< HEAD
<<<<<<< HEAD
deps = .[test,file,postgresql,doc]
       doc8
=======
=======
>>>>>>> f21ea84... Add automatic backport labels
deps =
    -e
    .[test,file,postgresql,doc]
    doc8
<<<<<<< HEAD
>>>>>>> 11a2520... api: avoid some indexer queries
=======
>>>>>>> f21ea84... Add automatic backport labels
setenv = GNOCCHI_TEST_DEBUG=1
commands = doc8 --ignore-path doc/source/rest.rst,doc/source/comparison-table.rst doc/source
           pifpaf -g GNOCCHI_INDEXER_URL run postgresql -- python setup.py build_sphinx -W

[testenv:docs-gnocchi.xyz]
basepython = python2.7
whitelist_externals = bash rm
setenv = GNOCCHI_STORAGE_DEPS=file
         GNOCCHI_TEST_DEBUG=1
deps = {[testenv:docs]deps}
       sphinxcontrib-versioning
<<<<<<< HEAD
<<<<<<< HEAD
=======
# for < 4.3 doc
       pbr
       WebOb<1.8
>>>>>>> 11a2520... api: avoid some indexer queries
=======
# for < 4.3 doc
       pbr
       WebOb<1.8
>>>>>>> f21ea84... Add automatic backport labels
# for <= 4.2 doc
       scipy
# for <= 4.1 doc
       pandas
# for 3.x doc
       lz4>=0.9,<=0.13
       oslotest
       oslosphinx
       retrying
commands =
    rm -rf doc/build/html
    pifpaf -g GNOCCHI_INDEXER_URL run postgresql -- sphinx-versioning build doc/source doc/build/html
    bash tools/validate_docs.sh

[doc8]
ignore-path = doc/source/rest.rst,doc/source/comparison-table.rst
