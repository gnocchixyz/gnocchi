# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: remote.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='remote.proto',
  package='remote',
  syntax='proto3',
  serialized_pb=_b('\n\x0cremote.proto\x12\x06remote\"-\n\x06Sample\x12\r\n\x05value\x18\x01 \x01(\x01\x12\x14\n\x0ctimestamp_ms\x18\x02 \x01(\x03\"(\n\tLabelPair\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t\"P\n\nTimeSeries\x12!\n\x06labels\x18\x01 \x03(\x0b\x32\x11.remote.LabelPair\x12\x1f\n\x07samples\x18\x02 \x03(\x0b\x32\x0e.remote.Sample\"6\n\x0cWriteRequest\x12&\n\ntimeseries\x18\x01 \x03(\x0b\x32\x12.remote.TimeSeries\"-\n\x0bReadRequest\x12\x1e\n\x07queries\x18\x01 \x03(\x0b\x32\r.remote.Query\"4\n\x0cReadResponse\x12$\n\x07results\x18\x01 \x03(\x0b\x32\x13.remote.QueryResult\"e\n\x05Query\x12\x1a\n\x12start_timestamp_ms\x18\x01 \x01(\x03\x12\x18\n\x10\x65nd_timestamp_ms\x18\x02 \x01(\x03\x12&\n\x08matchers\x18\x03 \x03(\x0b\x32\x14.remote.LabelMatcher\"L\n\x0cLabelMatcher\x12\x1f\n\x04type\x18\x01 \x01(\x0e\x32\x11.remote.MatchType\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\r\n\x05value\x18\x03 \x01(\t\"5\n\x0bQueryResult\x12&\n\ntimeseries\x18\x01 \x03(\x0b\x32\x12.remote.TimeSeries*J\n\tMatchType\x12\t\n\x05\x45QUAL\x10\x00\x12\r\n\tNOT_EQUAL\x10\x01\x12\x0f\n\x0bREGEX_MATCH\x10\x02\x12\x12\n\x0eREGEX_NO_MATCH\x10\x03\x62\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

_MATCHTYPE = _descriptor.EnumDescriptor(
  name='MatchType',
  full_name='remote.MatchType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='EQUAL', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NOT_EQUAL', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REGEX_MATCH', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REGEX_NO_MATCH', index=3, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=588,
  serialized_end=662,
)
_sym_db.RegisterEnumDescriptor(_MATCHTYPE)

MatchType = enum_type_wrapper.EnumTypeWrapper(_MATCHTYPE)
EQUAL = 0
NOT_EQUAL = 1
REGEX_MATCH = 2
REGEX_NO_MATCH = 3



_SAMPLE = _descriptor.Descriptor(
  name='Sample',
  full_name='remote.Sample',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='remote.Sample.value', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='timestamp_ms', full_name='remote.Sample.timestamp_ms', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=24,
  serialized_end=69,
)


_LABELPAIR = _descriptor.Descriptor(
  name='LabelPair',
  full_name='remote.LabelPair',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='remote.LabelPair.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='remote.LabelPair.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=71,
  serialized_end=111,
)


_TIMESERIES = _descriptor.Descriptor(
  name='TimeSeries',
  full_name='remote.TimeSeries',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='labels', full_name='remote.TimeSeries.labels', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='samples', full_name='remote.TimeSeries.samples', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=113,
  serialized_end=193,
)


_WRITEREQUEST = _descriptor.Descriptor(
  name='WriteRequest',
  full_name='remote.WriteRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='timeseries', full_name='remote.WriteRequest.timeseries', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=195,
  serialized_end=249,
)


_READREQUEST = _descriptor.Descriptor(
  name='ReadRequest',
  full_name='remote.ReadRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='queries', full_name='remote.ReadRequest.queries', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=251,
  serialized_end=296,
)


_READRESPONSE = _descriptor.Descriptor(
  name='ReadResponse',
  full_name='remote.ReadResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='results', full_name='remote.ReadResponse.results', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=298,
  serialized_end=350,
)


_QUERY = _descriptor.Descriptor(
  name='Query',
  full_name='remote.Query',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='start_timestamp_ms', full_name='remote.Query.start_timestamp_ms', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='end_timestamp_ms', full_name='remote.Query.end_timestamp_ms', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='matchers', full_name='remote.Query.matchers', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=352,
  serialized_end=453,
)


_LABELMATCHER = _descriptor.Descriptor(
  name='LabelMatcher',
  full_name='remote.LabelMatcher',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='remote.LabelMatcher.type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='remote.LabelMatcher.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='remote.LabelMatcher.value', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=455,
  serialized_end=531,
)


_QUERYRESULT = _descriptor.Descriptor(
  name='QueryResult',
  full_name='remote.QueryResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='timeseries', full_name='remote.QueryResult.timeseries', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=533,
  serialized_end=586,
)

_TIMESERIES.fields_by_name['labels'].message_type = _LABELPAIR
_TIMESERIES.fields_by_name['samples'].message_type = _SAMPLE
_WRITEREQUEST.fields_by_name['timeseries'].message_type = _TIMESERIES
_READREQUEST.fields_by_name['queries'].message_type = _QUERY
_READRESPONSE.fields_by_name['results'].message_type = _QUERYRESULT
_QUERY.fields_by_name['matchers'].message_type = _LABELMATCHER
_LABELMATCHER.fields_by_name['type'].enum_type = _MATCHTYPE
_QUERYRESULT.fields_by_name['timeseries'].message_type = _TIMESERIES
DESCRIPTOR.message_types_by_name['Sample'] = _SAMPLE
DESCRIPTOR.message_types_by_name['LabelPair'] = _LABELPAIR
DESCRIPTOR.message_types_by_name['TimeSeries'] = _TIMESERIES
DESCRIPTOR.message_types_by_name['WriteRequest'] = _WRITEREQUEST
DESCRIPTOR.message_types_by_name['ReadRequest'] = _READREQUEST
DESCRIPTOR.message_types_by_name['ReadResponse'] = _READRESPONSE
DESCRIPTOR.message_types_by_name['Query'] = _QUERY
DESCRIPTOR.message_types_by_name['LabelMatcher'] = _LABELMATCHER
DESCRIPTOR.message_types_by_name['QueryResult'] = _QUERYRESULT
DESCRIPTOR.enum_types_by_name['MatchType'] = _MATCHTYPE

Sample = _reflection.GeneratedProtocolMessageType('Sample', (_message.Message,), dict(
  DESCRIPTOR = _SAMPLE,
  __module__ = 'remote_pb2'
  # @@protoc_insertion_point(class_scope:remote.Sample)
  ))
_sym_db.RegisterMessage(Sample)

LabelPair = _reflection.GeneratedProtocolMessageType('LabelPair', (_message.Message,), dict(
  DESCRIPTOR = _LABELPAIR,
  __module__ = 'remote_pb2'
  # @@protoc_insertion_point(class_scope:remote.LabelPair)
  ))
_sym_db.RegisterMessage(LabelPair)

TimeSeries = _reflection.GeneratedProtocolMessageType('TimeSeries', (_message.Message,), dict(
  DESCRIPTOR = _TIMESERIES,
  __module__ = 'remote_pb2'
  # @@protoc_insertion_point(class_scope:remote.TimeSeries)
  ))
_sym_db.RegisterMessage(TimeSeries)

WriteRequest = _reflection.GeneratedProtocolMessageType('WriteRequest', (_message.Message,), dict(
  DESCRIPTOR = _WRITEREQUEST,
  __module__ = 'remote_pb2'
  # @@protoc_insertion_point(class_scope:remote.WriteRequest)
  ))
_sym_db.RegisterMessage(WriteRequest)

ReadRequest = _reflection.GeneratedProtocolMessageType('ReadRequest', (_message.Message,), dict(
  DESCRIPTOR = _READREQUEST,
  __module__ = 'remote_pb2'
  # @@protoc_insertion_point(class_scope:remote.ReadRequest)
  ))
_sym_db.RegisterMessage(ReadRequest)

ReadResponse = _reflection.GeneratedProtocolMessageType('ReadResponse', (_message.Message,), dict(
  DESCRIPTOR = _READRESPONSE,
  __module__ = 'remote_pb2'
  # @@protoc_insertion_point(class_scope:remote.ReadResponse)
  ))
_sym_db.RegisterMessage(ReadResponse)

Query = _reflection.GeneratedProtocolMessageType('Query', (_message.Message,), dict(
  DESCRIPTOR = _QUERY,
  __module__ = 'remote_pb2'
  # @@protoc_insertion_point(class_scope:remote.Query)
  ))
_sym_db.RegisterMessage(Query)

LabelMatcher = _reflection.GeneratedProtocolMessageType('LabelMatcher', (_message.Message,), dict(
  DESCRIPTOR = _LABELMATCHER,
  __module__ = 'remote_pb2'
  # @@protoc_insertion_point(class_scope:remote.LabelMatcher)
  ))
_sym_db.RegisterMessage(LabelMatcher)

QueryResult = _reflection.GeneratedProtocolMessageType('QueryResult', (_message.Message,), dict(
  DESCRIPTOR = _QUERYRESULT,
  __module__ = 'remote_pb2'
  # @@protoc_insertion_point(class_scope:remote.QueryResult)
  ))
_sym_db.RegisterMessage(QueryResult)


# @@protoc_insertion_point(module_scope)
