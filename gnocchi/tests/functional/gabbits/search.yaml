#
# Test the search API to achieve coverage of just the
# SearchController and SearchResourceController class code.
#

fixtures:
    - ConfigFixture

defaults:
  request_headers:
    # User foobar
    authorization: "basic Zm9vYmFyOg=="
    content-type: application/json

tests:
    - name: typo of search
      GET: /v1/search/notexists
      status: 404

    - name: typo of search in resource
      GET: /v1/search/resource/foobar
      status: 404

    - name: search with invalid uuid
      POST: /v1/search/resource/generic
      data:
        =:
          id: "cd9eef"

    - name: post generic resource
      POST: /v1/resource/generic
      data:
          id: faef212f-0bf4-4030-a461-2186fef79be0
          started_at: "2014-01-03T02:02:02.000000"
          user_id: 0fbb231484614b1a80131fc22f6afc9c
          project_id: f3d41b770cc14f0bb94a1d5be9c0e3ea
      status: 201

    - name: post generic resource twice
      POST: /v1/resource/generic
      data:
          id: df7e5e75-6a1d-4ff7-85cb-38eb9d75da7e
          started_at: "2014-01-03T02:02:02.000000"
          user_id: 0fbb231484614b1a80131fc22f6afc9c
          project_id: f3d41b770cc14f0bb94a1d5be9c0e3ea
      status: 201

    - name: search in_
      POST: /v1/search/resource/generic
      data:
        in:
          id:
            - faef212f-0bf4-4030-a461-2186fef79be0
            - df7e5e75-6a1d-4ff7-85cb-38eb9d75da7e
      response_json_paths:
        $.`len`: 2

    - name: search like created_by_project_id
      POST: /v1/search/resource/generic
      data:
        eq:
          created_by_project_id:
            - f3d41b770cc14f0bb94a1d5be9c0e3ea
      response_json_paths:
        $.`len`: 0

    - name: search in_ query string
      POST: /v1/search/resource/generic?filter=id%20in%20%5Bfaef212f-0bf4-4030-a461-2186fef79be0%2C%20df7e5e75-6a1d-4ff7-85cb-38eb9d75da7e%5D
      response_json_paths:
        $.`len`: 2

    - name: search empty query
      POST: /v1/search/resource/generic
      data: {}
      response_json_paths:
        $.`len`: 2
